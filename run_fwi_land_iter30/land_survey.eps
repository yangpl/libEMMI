%!PS-Adobe-2.0 EPSF-2.0
%%Title: land_survey.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Wed Apr 26 05:19:46 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 262 262
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 262 50 lineto 262 262 lineto 50 262 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (land_survey.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Apr 26 05:19:46 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 4250.00 4250.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 320 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 320 M
63 0 V
3456 0 R
-63 0 V
stroke
490 320 M
[ [(Helvetica) 100.0 0.0 true true 0 (-2000)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
/vshift -33 def
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 774 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 774 M
63 0 V
3456 0 R
-63 0 V
stroke
490 774 M
[ [(Helvetica) 100.0 0.0 true true 0 (-1500)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 1227 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 1227 M
63 0 V
3456 0 R
-63 0 V
stroke
490 1227 M
[ [(Helvetica) 100.0 0.0 true true 0 (-1000)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 1681 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 1681 M
63 0 V
3456 0 R
-63 0 V
stroke
490 1681 M
[ [(Helvetica) 100.0 0.0 true true 0 (-500)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 2135 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 2135 M
63 0 V
3456 0 R
-63 0 V
stroke
490 2135 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 2588 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 2588 M
63 0 V
3456 0 R
-63 0 V
stroke
490 2588 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 500)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 3042 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 3042 M
63 0 V
3456 0 R
-63 0 V
stroke
490 3042 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 3495 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 3495 M
63 0 V
3456 0 R
-63 0 V
stroke
490 3495 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1500)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 3949 M
3519 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 3949 M
63 0 V
3456 0 R
-63 0 V
stroke
490 3949 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 2000)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
550 320 M
0 3629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
550 320 M
0 63 V
0 3566 R
0 -63 V
stroke
550 220 M
[ [(Helvetica) 100.0 0.0 true true 0 (-2000)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
990 320 M
0 3629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
990 320 M
0 63 V
0 3566 R
0 -63 V
stroke
990 220 M
[ [(Helvetica) 100.0 0.0 true true 0 (-1500)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1430 320 M
0 3629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1430 320 M
0 63 V
0 3566 R
0 -63 V
stroke
1430 220 M
[ [(Helvetica) 100.0 0.0 true true 0 (-1000)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1870 320 M
0 3629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1870 320 M
0 63 V
0 3566 R
0 -63 V
stroke
1870 220 M
[ [(Helvetica) 100.0 0.0 true true 0 (-500)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2310 320 M
0 3629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2310 320 M
0 63 V
0 3566 R
0 -63 V
stroke
2310 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2749 320 M
0 3629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2749 320 M
0 63 V
0 3566 R
0 -63 V
stroke
2749 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 500)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3189 320 M
0 3366 V
0 200 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3189 320 M
0 63 V
0 3566 R
0 -63 V
stroke
3189 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3629 320 M
0 3366 V
0 200 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3629 320 M
0 63 V
0 3566 R
0 -63 V
stroke
3629 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1500)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4069 320 M
0 3629 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4069 320 M
0 63 V
0 3566 R
0 -63 V
stroke
4069 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 2000)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
550 3949 N
550 320 L
3519 0 V
0 3629 V
-3519 0 V
Z stroke
1.000 UP
LCb setrgbcolor
902 683 M
[ [(Helvetica) 160.0 0.0 true true 0 (1)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
1840 683 M
[ [(Helvetica) 160.0 0.0 true true 0 (2)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
2779 683 M
[ [(Helvetica) 160.0 0.0 true true 0 (3)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
3717 683 M
[ [(Helvetica) 160.0 0.0 true true 0 (4)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
902 1651 M
[ [(Helvetica) 160.0 0.0 true true 0 (5)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
1840 1651 M
[ [(Helvetica) 160.0 0.0 true true 0 (6)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
2779 1651 M
[ [(Helvetica) 160.0 0.0 true true 0 (7)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
3717 1651 M
[ [(Helvetica) 160.0 0.0 true true 0 (8)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
902 2618 M
[ [(Helvetica) 160.0 0.0 true true 0 (9)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
1840 2618 M
[ [(Helvetica) 160.0 0.0 true true 0 (10)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
2779 2618 M
[ [(Helvetica) 160.0 0.0 true true 0 (11)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
3717 2618 M
[ [(Helvetica) 160.0 0.0 true true 0 (12)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
902 3586 M
[ [(Helvetica) 160.0 0.0 true true 0 (13)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
1840 3586 M
[ [(Helvetica) 160.0 0.0 true true 0 (14)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
2779 3586 M
[ [(Helvetica) 160.0 0.0 true true 0 (15)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
LCb setrgbcolor
3717 3586 M
[ [(Helvetica) 160.0 0.0 true true 0 (16)]
] -53.3 MLshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
95 2134 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Y\(m\))]
] -33.3 MCshow
grestore
/Helvetica findfont 100 scalefont setfont
LTb
LCb setrgbcolor
2309 70 M
[ [(Helvetica) 100.0 0.0 true true 0 (X\(m\))]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
LTb
LCb setrgbcolor
2309 4099 M
[ [(Helvetica) 100.0 0.0 true true 0 (Acquisition geometry)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
3586 3836 M
[ [(Helvetica) 100.0 0.0 true true 0 (Receivers)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
726 501 TriU
937 501 TriU
1148 501 TriU
1359 501 TriU
1571 501 TriU
1782 501 TriU
1993 501 TriU
2204 501 TriU
2415 501 TriU
2626 501 TriU
2837 501 TriU
3048 501 TriU
3260 501 TriU
3471 501 TriU
3682 501 TriU
3893 501 TriU
726 719 TriU
937 719 TriU
1148 719 TriU
1359 719 TriU
1571 719 TriU
1782 719 TriU
1993 719 TriU
2204 719 TriU
2415 719 TriU
2626 719 TriU
2837 719 TriU
3048 719 TriU
3260 719 TriU
3471 719 TriU
3682 719 TriU
3893 719 TriU
726 937 TriU
937 937 TriU
1148 937 TriU
1359 937 TriU
1571 937 TriU
1782 937 TriU
1993 937 TriU
2204 937 TriU
2415 937 TriU
2626 937 TriU
2837 937 TriU
3048 937 TriU
3260 937 TriU
3471 937 TriU
3682 937 TriU
3893 937 TriU
726 1155 TriU
937 1155 TriU
1148 1155 TriU
1359 1155 TriU
1571 1155 TriU
1782 1155 TriU
1993 1155 TriU
2204 1155 TriU
2415 1155 TriU
2626 1155 TriU
2837 1155 TriU
3048 1155 TriU
3260 1155 TriU
3471 1155 TriU
3682 1155 TriU
3893 1155 TriU
726 1372 TriU
937 1372 TriU
1148 1372 TriU
1359 1372 TriU
1571 1372 TriU
1782 1372 TriU
1993 1372 TriU
2204 1372 TriU
2415 1372 TriU
2626 1372 TriU
2837 1372 TriU
3048 1372 TriU
3260 1372 TriU
3471 1372 TriU
3682 1372 TriU
3893 1372 TriU
726 1590 TriU
937 1590 TriU
1148 1590 TriU
1359 1590 TriU
1571 1590 TriU
1782 1590 TriU
1993 1590 TriU
2204 1590 TriU
2415 1590 TriU
2626 1590 TriU
2837 1590 TriU
3048 1590 TriU
3260 1590 TriU
3471 1590 TriU
3682 1590 TriU
3893 1590 TriU
726 1808 TriU
937 1808 TriU
1148 1808 TriU
1359 1808 TriU
1571 1808 TriU
1782 1808 TriU
1993 1808 TriU
2204 1808 TriU
2415 1808 TriU
2626 1808 TriU
2837 1808 TriU
3048 1808 TriU
3260 1808 TriU
3471 1808 TriU
3682 1808 TriU
3893 1808 TriU
726 2026 TriU
937 2026 TriU
1148 2026 TriU
1359 2026 TriU
1571 2026 TriU
1782 2026 TriU
1993 2026 TriU
2204 2026 TriU
2415 2026 TriU
2626 2026 TriU
2837 2026 TriU
3048 2026 TriU
3260 2026 TriU
3471 2026 TriU
3682 2026 TriU
3893 2026 TriU
726 2243 TriU
937 2243 TriU
1148 2243 TriU
1359 2243 TriU
1571 2243 TriU
1782 2243 TriU
1993 2243 TriU
2204 2243 TriU
2415 2243 TriU
2626 2243 TriU
2837 2243 TriU
3048 2243 TriU
3260 2243 TriU
3471 2243 TriU
3682 2243 TriU
3893 2243 TriU
726 2461 TriU
937 2461 TriU
1148 2461 TriU
1359 2461 TriU
1571 2461 TriU
1782 2461 TriU
1993 2461 TriU
2204 2461 TriU
2415 2461 TriU
2626 2461 TriU
2837 2461 TriU
3048 2461 TriU
3260 2461 TriU
3471 2461 TriU
3682 2461 TriU
3893 2461 TriU
726 2679 TriU
937 2679 TriU
1148 2679 TriU
1359 2679 TriU
1571 2679 TriU
1782 2679 TriU
1993 2679 TriU
2204 2679 TriU
2415 2679 TriU
2626 2679 TriU
2837 2679 TriU
3048 2679 TriU
3260 2679 TriU
3471 2679 TriU
3682 2679 TriU
3893 2679 TriU
726 2897 TriU
937 2897 TriU
1148 2897 TriU
1359 2897 TriU
1571 2897 TriU
1782 2897 TriU
1993 2897 TriU
2204 2897 TriU
2415 2897 TriU
2626 2897 TriU
2837 2897 TriU
3048 2897 TriU
3260 2897 TriU
3471 2897 TriU
3682 2897 TriU
3893 2897 TriU
726 3114 TriU
937 3114 TriU
1148 3114 TriU
1359 3114 TriU
1571 3114 TriU
1782 3114 TriU
1993 3114 TriU
2204 3114 TriU
2415 3114 TriU
2626 3114 TriU
2837 3114 TriU
3048 3114 TriU
3260 3114 TriU
3471 3114 TriU
3682 3114 TriU
3893 3114 TriU
726 3332 TriU
937 3332 TriU
1148 3332 TriU
1359 3332 TriU
1571 3332 TriU
1782 3332 TriU
1993 3332 TriU
2204 3332 TriU
2415 3332 TriU
2626 3332 TriU
2837 3332 TriU
3048 3332 TriU
3260 3332 TriU
3471 3332 TriU
3682 3332 TriU
3893 3332 TriU
726 3550 TriU
937 3550 TriU
1148 3550 TriU
1359 3550 TriU
1571 3550 TriU
1782 3550 TriU
1993 3550 TriU
2204 3550 TriU
2415 3550 TriU
2626 3550 TriU
2837 3550 TriU
3048 3550 TriU
3260 3550 TriU
3471 3550 TriU
3682 3550 TriU
3893 3550 TriU
726 3768 TriU
937 3768 TriU
1148 3768 TriU
1359 3768 TriU
1571 3768 TriU
1782 3768 TriU
1993 3768 TriU
2204 3768 TriU
2415 3768 TriU
2626 3768 TriU
2837 3768 TriU
3048 3768 TriU
3260 3768 TriU
3471 3768 TriU
3682 3768 TriU
3893 3768 TriU
3797 3836 TriU
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
3586 3736 M
[ [(Helvetica) 100.0 0.0 true true 0 (Transmitters)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C
902 683 CircleF
1840 683 CircleF
2779 683 CircleF
3717 683 CircleF
902 1651 CircleF
1840 1651 CircleF
2779 1651 CircleF
3717 1651 CircleF
902 2618 CircleF
1840 2618 CircleF
2779 2618 CircleF
3717 2618 CircleF
902 3586 CircleF
1840 3586 CircleF
2779 3586 CircleF
3717 3586 CircleF
3797 3736 CircleF
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
550 3949 N
550 320 L
3519 0 V
0 3629 V
-3519 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
